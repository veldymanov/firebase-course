rules_version = '2';

// get, list === read
// create, update, delete == write
 
service cloud.firestore {
  match /databases/{database}/documents {
  
  	function isAuthenticated() {
    	return request.auth.uid != null;
    }    
    
    function isAdmin() {
    	return isAuthenticated() &&
      	get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isWhitelisted() {
    	return isAuthenticated() && 
      	exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }
    
    function isNonEmptyString(fieldName) {
    	return request.resource.data[fieldName] is string
      		&& request.resource.data[fieldName].size() > 0;
    }
    
    function isValidCourse() {
    	return request.resource.data.seqNo is number
      		&& request.resource.data.lessonsCount is number
      		&& request.resource.data.lessonsCount > 0
        	&& isNonEmptyString('url');
    }
    
    function isDraftCourse() {
      return resource.data.status == 'draft';
    }
    
    
    match /users/{userId} {
    	allow read, write: if false;
    }
  
		match /courses/{courseId} {
    	allow read: if isWhitelisted();
      allow write: if isAdmin() && isValidCourse() && isDraftCourse();
      
      match /lessons/{lessonId} {
        allow read: if isWhitelisted();
        allow write: if isAdmin();
      }
    }
  }
}